
#Installing Docker
#http://localhost:8080
#Dockerizing the Node.js Applications

FROM node
RUN mkdir -p /usr/src/app
COPY index.js /usr/src/app
EXPOSE 8080
CMD [ "node", "/usr/src/app/index" ]


docker build -t load-balanced-app .


docker run -e "MESSAGE=First instance" -p 8081:8080 -d load-balanced-app
docker run -e "MESSAGE=Second instance" -p 8082:8080 -d load-balanced-app



#Load Balancing with a Dockerized NGINX Instance


mkdir nginx-docker

#we will create a file called nginx.conf

upstream my-app {
    server 172.17.0.1:8081 weight=1;
    server 172.17.0.1:8082 weight=1;
}

server {
    location / {
        proxy_pass http://my-app;
    }
}




#Now we will create the Dockerfile that will be used to dockerize NGINX with this configuration. This file will contain the following code


FROM nginx
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/conf.d/default.conf




#Having created both files, we can now build and run NGINX containerized on Docker. We achieve that by running the following commands


docker build -t load-balance-nginx .
docker run -p 8080:80 -d load-balance-nginx



#After issuing these commands, let's open a web browser and access http://localhost:8080
